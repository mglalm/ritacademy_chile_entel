-- Ericsson Software Inc. 2001-2012

-- DATABASE UPGRADE SCRIPT OF ecm. PRODUCT NO 20140910
-- DATABASE UPGRADE SCRIPT OF catalog FROM PRODUCT NO 00006018 TO PRODUCT NO 00006024
-- DATABASE UPGRADE SCRIPT OF api_common. PRODUCT NO 20130410
-- DATABASE UPGRADE SCRIPT OF SIDCommon. PRODUCT NO 00005201
-- DATABASE UPGRADE SCRIPT OF cwl_security. PRODUCT NO 20120817
-- DATABASE UPGRADE SCRIPT OF ecmDTLib. PRODUCT NO 20140328
-- DATABASE UPGRADE SCRIPT OF ecmCS6import FROM PRODUCT NO 00000001 TO PRODUCT NO 00000002
-- DATABASE UPGRADE SCRIPT OF cwl_config. PRODUCT NO 20131210
-- DATABASE UPGRADE SCRIPT OF serviceOrchestrationFramework. PRODUCT NO 20120815
-- DATABASE UPGRADE SCRIPT OF ecmBillingAdapterValidation FROM PRODUCT NO 00000001 TO PRODUCT NO 1
-- DATABASE UPGRADE SCRIPT OF cwt_common5. PRODUCT NO 20130315
-- DATABASE UPGRADE SCRIPT OF EOC FROM PRODUCT NO 00000001 TO PRODUCT NO 1
-- DATABASE UPGRADE SCRIPT OF cwl_ims. PRODUCT NO 20130319
-- DATABASE UPGRADE SCRIPT OF catalogClient. PRODUCT NO 00006003


-- ATTENTION: THIS SCRIPT HAS TO BE EXAMINED BY DATABASE ADMINISTRATOR!
--            IT MAY NOT CONTAIN ALL NEEDED PARAMETERS.
--            MODIFY THE SCRIPT TO SPECIFY PROPER TABLESPACE AND STORAGE CLAUSES


-- WARNING : PLEASE REVIEW THE FOLLOWING NCLOB (UNLIMITED LENGTH) TYPES:
-- IMPACTEDITEMSRES
-- IMPACTEDITEMSREQUEST



-- Generated by Ericsson Service Designer on Mon Apr 24 14:22:36 ART 2017


-- THE FOLLOWING STATEMENTS APPLY TO 'c##train:orcl@localhost' DATABASE ------------------------------- 


define DEFAULT_TABLESPACE_TABLE = USERS;
define DEFAULT_TABLESPACE_INDEX = USERS;
define PE_TABLESPACE_TABLE = USERS;
define PE_TABLESPACE_INDEX = USERS;

CREATE TABLE c##train.projectImpacts(
	CWDOCID VARCHAR2(16) NOT NULL,
	PROCESSID NUMBER(16),
	JOBSTATUS VARCHAR2(10),
	PROJECTID VARCHAR2(128),
	PROJECTSTATE VARCHAR2(10),
	IMPACTEDITEMSRES NCLOB,
	IMPACTEDITEMSREQUEST NCLOB,
	STARTEDDATETIME DATE,
	COMPLETEDDATETIME DATE,
	CWCREATED DATE,
	LASTUPDATEDDATE DATE,
	CONSTRAINT PK_projectImpacts PRIMARY KEY(CWDOCID) USING INDEX
	(CREATE UNIQUE INDEX PK_projectImpacts ON projectImpacts(CWDOCID) TABLESPACE &DEFAULT_TABLESPACE_INDEX)
)
TABLESPACE &DEFAULT_TABLESPACE_TABLE;


--------------------------------------------------------
--  New "BARRING" Service Technical Type
--------------------------------------------------------

DELETE FROM CWDBCODETABLES WHERE CTTYPE = 'SERVICE_TECHNICAL_TYPE' AND CODE = 'BARRING';
INSERT INTO CWDBCODETABLES (CTTYPE, CODE, ACTIVE, DESCRIPTION, PARAM, UPDATEDBY, LASTUPDATEDDATE) VALUES ('SERVICE_TECHNICAL_TYPE', 'BARRING', 1, INSERT_TRANSTXT('Barring'), null, 'upadmin', sysdate);
DROP INDEX UNIQUE_CWPC_GROUPTARGET;
CREATE UNIQUE INDEX UNIQUE_CWPC_GROUPTARGET ON CWPC_GROUPTARGET (ITEMGROUPID,ITEMRELATIONCODE,ASSOCIATIONTYPE);
/


------------------------------------------------------------------------------
--  TR:HV22491 ECM:CBiO Migration - publishedCCSTable migration fails in case of versions in def.  
--  Remove 'publishedCCSTable' infotables in definition. These are no longer part of flow.
------------------------------------------------------------------------------

DELETE FROM CWPC_INFOTABLE WHERE INFOMODELCODE = 'publishedCCSTable' AND STATUS = 'DEF';

------------------------------------------------------------------------------
--  TR: HU43563 - Implemented the Row level versioning for CCS Info table
--  TR: HU74366 [ECM] D1615 upgrade has errors
------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE copy_info_data
IS
  v_data            clob;
  v_infotableid     varchar2(32);
  v_status          varchar2(3);  
  v_startdate       date;
  exp_bad_data      EXCEPTION;
  v_datarow         varchar2(32767);
  v_offerid         varchar2(32);
  var_clob_line_count NUMBER;
  CURSOR cursor1 IS
    SELECT INFOTABLEID,status,data,startdate
    FROM CWPC_INFOTABLE 
    WHERE INFOMODELCODE = 'publishedCCSTable'
    AND data IS NOT NULL
    ORDER BY STARTDATE ASC,
      STATUS ASC, VERSIONCOMMITDATE DESC;

BEGIN
  OPEN cursor1;
  ----------------------------------------------------
  LOOP -- MAIN
  ----------------------------------------------------
    FETCH cursor1 INTO v_infotableid, v_status, v_data, v_startdate;
    EXIT WHEN cursor1%notfound;
    ----------------------------------------------------
      var_clob_line_count := length(v_data) - nvl(length(replace(v_data,chr(10))),0) + 1;
      for i in 1.. var_clob_line_count 
    loop
        v_datarow := regexp_substr(v_data,'\S+',1,i);
    v_offerid := REGEXP_SUBSTR(v_datarow, '\w+', 1, 1);
--    DBMS_OUTPUT.put_line ('v_datarow #' || i || ': ' || v_datarow);
      ----------------------------------------------------
      -- DATA EXCEPTION
        FOR row_duplicate in 
        (SELECT infotableid, data, status, startdate
        FROM CWPC_INFOTABLEROW_V 
        WHERE INFOTABLECODE = 'publishedCCSTable'
        AND data=v_datarow
        AND STATUS='DEF' AND v_status='ACT')
        LOOP
        DBMS_OUTPUT.PUT_LINE('exp_bad_data -ERROR- CWPC_INFOTABLE DATA: '|| v_datarow || CHR (13) 
        ||'Conflict DEF: INFOTABLEID: '|| row_duplicate.infotableid ||' STATUS: '|| row_duplicate.STATUS ||' STARTDATE: '||row_duplicate.startdate|| CHR (13) 
        ||'Conflict ACT: INFOTABLEID: '||v_infotableid|| ' STATUS: '||v_status ||' STARTDATE: '||v_startdate);
          RAISE exp_bad_data; -- invalid data. DEF row is earlier than ACT row
        END LOOP; 
      ----------------------------------------------------

      INSERT
      INTO CWPC_INFOTABLEROW_V      
        (
          VERSIONID,
          CODE,
          DATA,
          INFOTABLECODE,
          INFOTABLEID,
          STARTDATE,
          ENDDATE,
          CWCREATED,
          CWCREATEDBY,
          LASTUPDATEDDATE,
          UPDATEDBY,
          STATUS,
          VERSIONCOMMITDATE,
          CANCEL
        )
      SELECT 'CCSPUB'||dbms_random.string('X', 26),
        v_offerid,
        v_datarow,
        INFOTABLECODE,
        v_infotableid,
        STARTDATE,
        NULL,
        CWCREATED,
        CWCREATEDBY,
        LASTUPDATEDDATE,
        UPDATEDBY,
        STATUS,
        VERSIONCOMMITDATE,
        NULL
      FROM CWPC_INFOTABLE info_record
      WHERE info_record.INFOTABLEID = v_infotableid
    AND v_datarow is not null 
      AND v_datarow NOT  IN 
      (SELECT data FROM CWPC_INFOTABLEROW_V);
    ----------------------------------------------------
    END LOOP; -- MAIN
    ----------------------------------------------------
  END LOOP;
  CLOSE cursor1;

  UPDATE CWPC_INFOMODEL SET isrowversioning=1 WHERE INFOMODELCODE='publishedCCSTable';
  UPDATE CWPC_INFOTABLE SET data = NULL WHERE INFOMODELCODE='publishedCCSTable';
  
  COMMIT;
  EXCEPTION 
    WHEN exp_bad_data THEN
      DBMS_OUTPUT.PUT_LINE('EXCEPTION OCCURED DURING EXECUTING OF MIGRATION exp_bad_data - invalid STATUS/START DATES');
    dbms_output.put_line('ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK);
    dbms_output.put_line('ERROR_BACKTRACE: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);   
      ROLLBACK;
      null;
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('EXCEPTION OCCURED DURING EXECUTING OF MIGRATION '
      ||SQLCODE||' -ERROR- '||SQLERRM);
    dbms_output.put_line('ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK);
    dbms_output.put_line('ERROR_BACKTRACE: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE);   
      ROLLBACK;
      null;
  END copy_info_data;
/ 
------------------------------------------------------------------------------
CALL copy_info_data();
DROP PROCEDURE copy_info_data;
------------------------------------------------------------------------------




CREATE BITMAP INDEX INDEX_CATALOGOBJECTCODE ON CWPC_PROJECTCOMMAND
(CATALOGOBJECTCODE)
LOGGING
NOPARALLEL;

CREATE BITMAP INDEX INDEX_CATALOGOBJECTID ON CWPC_PROJECTCOMMAND
(CATALOGOBJECTID)
LOGGING
NOPARALLEL;

CREATE BITMAP INDEX INDEX_OBJECTTYPE ON CWPC_PROJECTCOMMAND
(OBJECTTYPE)
LOGGING
NOPARALLEL;

CREATE INDEX IDX_ITEMCODE ON CWPC_RESTRICTION_V
(ITEMCODE)
LOGGING
NOPARALLEL;


UPDATE CWPRODUCTPROPERTIES SET NVALUE=00006024 WHERE ID='catalog';
UPDATE CWPRODUCTPROPERTIES SET NVALUE=00000002 WHERE ID='ecmCS6import';

COMMIT;


-- Generated by Ericsson Service Designer on Mon Apr 24 14:22:36 ART 2017

