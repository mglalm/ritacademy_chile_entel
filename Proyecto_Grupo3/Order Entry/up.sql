-- Ericsson Software Inc. 2001-2012

-- DATABASE UPGRADE SCRIPT OF data_order FROM PRODUCT NO  TO PRODUCT NO 00016000
-- DATABASE UPGRADE SCRIPT OF wizard FROM PRODUCT NO  TO PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF cwl_customer. PRODUCT NO 20130101
-- DATABASE UPGRADE SCRIPT OF party. PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF customer. PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF SIDCommon. PRODUCT NO 00005201
-- DATABASE UPGRADE SCRIPT OF ecmDTLib FROM PRODUCT NO  TO PRODUCT NO 20140328
-- DATABASE UPGRADE SCRIPT OF ecmCS6import. PRODUCT NO 00000001
-- DATABASE UPGRADE SCRIPT OF customer_information_management FROM PRODUCT NO  TO PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF serviceOrchestrationFramework. PRODUCT NO 20120815
-- DATABASE UPGRADE SCRIPT OF ecmBillingAdapterValidation FROM PRODUCT NO  TO PRODUCT NO 1
-- DATABASE UPGRADE SCRIPT OF cwInitialization FROM PRODUCT NO  TO PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF cwl_ims. PRODUCT NO 20130319
-- DATABASE UPGRADE SCRIPT OF ecm FROM PRODUCT NO  TO PRODUCT NO 20140910
-- DATABASE UPGRADE SCRIPT OF order_negotiations FROM PRODUCT NO  TO PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF order_negotiations_lib FROM PRODUCT NO  TO PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF service_registry FROM PRODUCT NO  TO PRODUCT NO 00006000
-- DATABASE UPGRADE SCRIPT OF catalog. PRODUCT NO 00006018
-- DATABASE UPGRADE SCRIPT OF api_common. PRODUCT NO 20130410
-- DATABASE UPGRADE SCRIPT OF cwl_party. PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF cwl_security FROM PRODUCT NO 20120816 TO PRODUCT NO 20120817
-- DATABASE UPGRADE SCRIPT OF cwl_service_registry FROM PRODUCT NO  TO PRODUCT NO 00006003
-- DATABASE UPGRADE SCRIPT OF cwl_address. PRODUCT NO 20120910
-- DATABASE UPGRADE SCRIPT OF plugin_on_cim FROM PRODUCT NO  TO PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF address. PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF cwl_config. PRODUCT NO 20131210
-- DATABASE UPGRADE SCRIPT OF cwt_common5. PRODUCT NO 20130315
-- DATABASE UPGRADE SCRIPT OF data_dictionary. PRODUCT NO 00005000
-- DATABASE UPGRADE SCRIPT OF catalogClient FROM PRODUCT NO 00006001 TO PRODUCT NO 00006003


-- ATTENTION: THIS SCRIPT HAS TO BE EXAMINED BY DATABASE ADMINISTRATOR!
--            IT MAY NOT CONTAIN ALL NEEDED PARAMETERS.
--            MODIFY THE SCRIPT TO SPECIFY PROPER TABLESPACE AND STORAGE CLAUSES


-- WARNING : PLEASE REVIEW THE FOLLOWING NCLOB (UNLIMITED LENGTH) TYPES:
-- NOTES
-- ATTRS
-- RELATEDENTITIES
-- RELATEDSCS
-- RELATEDORDERS
-- NOTES
-- PRODUCT
-- QUANTITY
-- RESOURCES
-- SERVICES
-- ATTRS
-- ATTRS
-- ATTRS
-- PARTYFAMILYNAMEPREFIX
-- PARTYARISTOCRATICTITLE
-- ATTRS



-- Generated by Ericsson Service Designer on Tue Feb 28 17:59:46 CLT 2017


-- THE FOLLOWING STATEMENTS APPLY TO 'C##TRAIN_2:orcl@localhost' DATABASE ------------------------------- 


define DEFAULT_TABLESPACE_TABLE = USERS;
define DEFAULT_TABLESPACE_INDEX = USERS;
define PE_TABLESPACE_TABLE = USERS;
define PE_TABLESPACE_INDEX = USERS;

CREATE TABLE C##TRAIN_2.CWPC_BUSINESSDATEDEFINITION(
	CODE VARCHAR2(32) NOT NULL,
	NAME VARCHAR2(128),
	DATETYPE VARCHAR2(32),
	DATEVALUELEAFNAME VARCHAR2(32),
	RELATEDDATECODE VARCHAR2(32),
	STATUS VARCHAR2(3),
	STARTDATE DATE,
	ENDDATE DATE,
	PERIODCODE VARCHAR2(32),
	PERIODNAME VARCHAR2(10),
	LASTUPDATEDDATE DATE,
	UPDATEDBY VARCHAR2(64),
	CREATEDBY VARCHAR2(64),
	CREATEDDATE DATE,
	OWNERID VARCHAR2(32),
	LABEL VARCHAR2(10),
	CONSTRAINT PK_CWPC_BUSINESSDATEDEFINITION PRIMARY KEY(CODE) USING INDEX
	(CREATE UNIQUE INDEX PK_CWPC_BUSINESSDATEDEFINITION ON CWPC_BUSINESSDATEDEFINITION(CODE) TABLESPACE &DEFAULT_TABLESPACE_INDEX)
)
TABLESPACE &DEFAULT_TABLESPACE_TABLE;

ALTER TABLE C##TRAIN_2.CWORDERINSTANCE
ADD (
	BASKETID VARCHAR2(16),
	OSTATE VARCHAR2(16),
	CUSTOMERID VARCHAR2(32),
	ACCOUNTID VARCHAR2(32),
	ORDERTYPE VARCHAR2(16),
	ORDERSUBTYPE VARCHAR2(16),
	RELATEDORDER VARCHAR2(16),
	ORDERNUM NUMBER(9),
	ORDVER NUMBER(16),
	EFFECTIVEDATE DATE,
	SUBMITTEDBY VARCHAR2(64),
	SUBMITTEDDATE DATE,
	PRICE NUMBER(14,4),
	ONETIMEPRICE NUMBER(14,4),
	PRICEDON DATE,
	CORRELATIONID VARCHAR2(32),
	QUOTEID VARCHAR2(32),
	CHANNEL VARCHAR2(128),
	EXPIRATIONDATE DATE,
	QUOTEEXPIRATIONDATE DATE,
	ASSIGNEDPRIORITY NUMBER(10),
	REQUESTEDSTARTDATE TIMESTAMP,
	REQUESTEDCOMPLETIONDATE TIMESTAMP,
	DESCRIPTION VARCHAR2(128),
	BITYPE VARCHAR2(32),
	EXTERNALORDERID VARCHAR2(32),
	ISBUNDLED NUMBER(1),
	NOTES NCLOB,
	ATTRS NCLOB,
	MODE_SC VARCHAR2(32),
	ISLOCKED NUMBER(1),
	RELATEDENTITIES NCLOB,
	REQUESTER VARCHAR2(128),
	BISPECIFICATION VARCHAR2(128),
	RELATEDSCS NCLOB,
	QUOTEON TIMESTAMP,
	COMPLETIONDATE TIMESTAMP,
	RELATEDORDERS NCLOB,
	EXTENDEDSTATE VARCHAR2(64),
	ORDERROLE VARCHAR2(1),
	ORDERIDREF VARCHAR2(32));

ALTER TABLE C##TRAIN_2.cwpc_basketItemRelation
ADD (
	EFFECTIVEDATE DATE,
	STATUS VARCHAR2(8),
	SOURCE VARCHAR2(3),
	GUID VARCHAR2(16),
	PERCENTAGE NUMBER(3),
	USERFLAG NUMBER(1));

ALTER TABLE C##TRAIN_2.cwpc_basketItem
ADD (
	SERIALNUMBER VARCHAR2(32),
	SERVICEREGISTRYID VARCHAR2(128),
	NOTES NCLOB,
	GUID VARCHAR2(16),
	PREVSTATUS VARCHAR2(16),
	SOURCE VARCHAR2(3),
	EFFECTIVEDATE DATE,
	SERVICESTARTDATE DATE,
	ITEMNOTES VARCHAR2(3200),
	ISCOMPLETED VARCHAR2(1),
	DESCRIPTION VARCHAR2(512),
	ASSIGNEDPRIORITY NUMBER(3),
	BITYPE VARCHAR2(32),
	BISPECIFICATION VARCHAR2(512),
	DUEDATE DATE,
	COMPLETIONDATE TIMESTAMP,
	PRODUCT NCLOB,
	QUANTITY NCLOB,
	RESOURCES NCLOB,
	SERVICES NCLOB,
	ATTRS NCLOB);

ALTER TABLE C##TRAIN_2.CWT_SR_PRODPRICE
ADD (
	POPID VARCHAR2(32),
	PRICETYPE VARCHAR2(32),
	EXTERNALIDS VARCHAR2(128),
	UNITOFMEASURE VARCHAR2(32))
 MODIFY (
	NAME VARCHAR2(128),
	DESCRIPTION VARCHAR2(256));

ALTER TABLE C##TRAIN_2.CWT_SR_ENTITY
ADD (
	SPECIFICATIONID VARCHAR2(32),
	EXTERNALINSTANCEID VARCHAR2(32),
	CIMCUSTOMERID VARCHAR2(16),
	CIMACCOUNTID VARCHAR2(16),
	CIMADDRESSID VARCHAR2(32),
	CTLQCID VARCHAR2(32),
	CTLPRODUCTACCOUNTID VARCHAR2(32),
	CTLCUSTOMERACCOUNTID VARCHAR2(32),
	CLLI VARCHAR2(12),
	UBI VARCHAR2(32),
	BMLORDERID VARCHAR2(32),
	SMLORDERID VARCHAR2(32));

ALTER TABLE C##TRAIN_2.CWPC_ITEMRELATION_V
ADD (
	GROUPSEQUENCE VARCHAR2(20));

ALTER TABLE C##TRAIN_2.cwpc_itemAttribute_v
ADD (
	ISARRAY NUMBER(1),
	ARRAYSIZE NUMBER(4));

ALTER TABLE C##TRAIN_2.CWPC_CHARGETYPE_V
ADD (
	VERSION VARCHAR2(32),
	CHARGECATEGORY VARCHAR2(32),
	DISCOUNTTARGETPLAID VARCHAR2(32),
	PLATYPE VARCHAR2(32),
	PRODUCTACCOUNTSPECID VARCHAR2(32),
	PRORATED NUMBER(1),
	RECURRINGPERIODLENGTH NUMBER(3),
	RECURRINGPERIODTYPE VARCHAR2(32),
	ISSPEC NUMBER(1),
	PLASPECID VARCHAR2(32),
	PROJECTCODE VARCHAR2(32),
	TARIFFTYPES VARCHAR2(1024),
	PRICINGTYPE VARCHAR2(32),
	RATINGOBJTYPE VARCHAR2(3),
	ID VARCHAR2(32),
	TARIFFTIMETIMEZONETYPE VARCHAR2(32));

ALTER TABLE C##TRAIN_2.cwpc_ruleParameters
ADD (
	DEFAULTVALUE VARCHAR2(4000));

ALTER TABLE C##TRAIN_2.CWPC_ITEMBUSINESSDATES_V
ADD (
	BUSINESSDATESVALUE VARCHAR2(4000),
	ISFORMULA NUMBER(1));

ALTER TABLE C##TRAIN_2.cwpc_attribute
 MODIFY (
	CODETABLENAME VARCHAR2(64));

ALTER TABLE C##TRAIN_2.CWPC_CATALOGCONFIGURATION
ADD (
	ENABLEDELTA NUMBER(1),
	ACTIVATEWITHVALIDATIONERRORS NUMBER(1));

ALTER TABLE C##TRAIN_2.CWT_PARTYROLE
ADD (
	DATEUNTIL DATE,
	DATESINCE DATE,
	STATUS VARCHAR2(1),
	CATAGORYNAME VARCHAR2(2));

ALTER TABLE C##TRAIN_2.CWT_EXTIDENTIFIER
ADD (
	OWNERID VARCHAR2(32))
 MODIFY (
	EXTERNALSYSTEM VARCHAR2(128),
	EXTERNALIDENTIFIERTYPE VARCHAR2(16));

ALTER TABLE C##TRAIN_2.CWT_CUSTOMERSITE
ADD (
	STARTDATETIME DATE,
	ENDDATETIME DATE,
	STATUS VARCHAR2(128),
	ATTRS NCLOB);

ALTER TABLE C##TRAIN_2.CWT_CUSTOMERNOTE
ADD (
	TICKETID VARCHAR2(16),
	ATTACHMENTURL VARCHAR2(256),
	SUBJECT VARCHAR2(256),
	CHANNEL VARCHAR2(16),
	STATUS VARCHAR2(16),
	STATUSDATE DATE,
	EXPIRYDATE DATE)
 MODIFY (
	NOTESUBTYPE VARCHAR2(16));

ALTER TABLE C##TRAIN_2.CWT_CUSTOMERACCOUNT
ADD (
	PAYMENTMETHODCREATEDDATE DATE,
	BILLINGPROFILEID VARCHAR2(32),
	PAYMENTPROFILEID VARCHAR2(32),
	PIN VARCHAR2(8),
	DESCRIPTION VARCHAR2(256),
	PAYMENTRESPONSIBLE NUMBER(1),
	ATTRS NCLOB)
 MODIFY (
	ACCOUNTTYPE VARCHAR2(16),
	CREDITCHECKRESULT VARCHAR2(16),
	ACCOUNTSTATUS VARCHAR2(16));

ALTER TABLE C##TRAIN_2.CWT_PAYMENTMETHOD
 MODIFY (
	ACCOUNTTYPE VARCHAR2(16),
	CREDITCHECKRESULT VARCHAR2(16));

ALTER TABLE C##TRAIN_2.CWT_PARTYNAME
ADD (
	COMPANYDESCRIPTION VARCHAR2(256),
	SEARCHBYSOUNDEX NUMBER(1),
	COMPANYTITLE VARCHAR2(50),
	COMPANYDEPARTMENT VARCHAR2(50),
	VALIDFROM DATE,
	VALIDTO DATE,
	PARTYFAMILYNAMEPREFIX NCLOB,
	PARTYARISTOCRATICTITLE NCLOB,
	ARISTOCRATICTITLE VARCHAR2(30),
	GENERATION VARCHAR2(30),
	FAMILYNAMEPREFIX VARCHAR2(10),
	LEGALNAME VARCHAR2(30));

ALTER TABLE C##TRAIN_2.CWT_PARTY
ADD (
	TITLE VARCHAR2(50),
	STATUS VARCHAR2(20),
	ISLEGALENTITY NUMBER(1),
	LANGUAGELEVEL VARCHAR2(20),
	PARTYSKILLS VARCHAR2(1024),
	PARTYDISABILITIES VARCHAR2(1024),
	DISABILITIES VARCHAR2(256),
	SKILLS VARCHAR2(256),
	LANGUAGEABILITY VARCHAR2(1));

ALTER TABLE C##TRAIN_2.CWT_IDENTIFICATION
ADD (
	MASKEDNUMBER VARCHAR2(32),
	ISSUEDBY VARCHAR2(64),
	ISSUEDDATE DATE,
	ISSUEDATE DATE);

ALTER TABLE C##TRAIN_2.CWPL_configTemplate
 MODIFY (
	CONFIGNAME VARCHAR2(64));

ALTER TABLE C##TRAIN_2.CWT_MICROFLOW
ADD (
	METADATAPARAMETER VARCHAR2(256));

ALTER TABLE C##TRAIN_2.CWT_TAS
ADD (
	OPERATION VARCHAR2(128),
	ISLISTENER NUMBER(1),
	ISAUTO NUMBER(1));

ALTER TABLE C##TRAIN_2.CWT_TAI
ADD (
	ISAUTO NUMBER(1),
	ISLISTENER NUMBER(1));

ALTER TABLE C##TRAIN_2.CWT_FPSTAS
ADD (
	CODE VARCHAR2(64),
	LABEL VARCHAR2(128),
	DESCRIPTION VARCHAR2(128));

ALTER TABLE C##TRAIN_2.CWT_FPI
ADD (
	ORDERITEMID VARCHAR2(16));

ALTER TABLE C##TRAIN_2.CWT_CFS
 MODIFY (
	CFSNAME VARCHAR2(64));

ALTER TABLE C##TRAIN_2.CWT_ADDR_EXTID
ADD (
	PRIMARY NUMBER(1))
 MODIFY (
	EXTERNALSYSTEM VARCHAR2(128));

ALTER TABLE C##TRAIN_2.CWT_COUNTRYVALIDATIONRULES
ADD (
	ADDRESSTYPE VARCHAR2(16));

ALTER TABLE C##TRAIN_2.CWT_CITY
 MODIFY (
	STATE VARCHAR2(16));

ALTER TABLE C##TRAIN_2.CWT_ADDRESSMASTER
ADD (
	COUNTY VARCHAR2(30),
	STATECODE VARCHAR2(16),
	CITYNAME VARCHAR2(30),
	MUNICIPALITYNAME VARCHAR2(64),
	SERVICEABILITYID VARCHAR2(32),
	CWDOCSTAMP VARCHAR2(9),
	ATTRS NCLOB,
	LOCATIONTYPE VARCHAR2(16),
	BUILDINGTYPE VARCHAR2(6),
	STREETNAMEPREFIX VARCHAR2(6),
	STREETNAMESUFFIX VARCHAR2(6),
	SWCCLLI VARCHAR2(9),
	BUILDINGCLLI VARCHAR2(9),
	MDUINDICATOR NUMBER(1),
	VERTICALOFFSETMILES NUMBER(20,9),
	HORIZONTALOFFSETMILES NUMBER(20,9),
	LATITUDE NUMBER(20,9),
	LONGITUDE NUMBER(20,9),
	AVAILABLESERVICES VARCHAR2(512))
 MODIFY (
	ADDRESSTYPEOCCUPANCY VARCHAR2(16));

-- ADD ReliesOn as one of the code into eoc_item_role code table. to support new order item relation type.
INSERT INTO CWDBCODETABLES (CTTYPE, CODE, ACTIVE, DESCRIPTION, PARAM, UPDATEDBY, LASTUPDATEDDATE) 
VALUES ('eoc_item_role', 'ReliesOn', 1, INSERT_TRANSTXT('Relies On'), null, 'upadmin', sysdate);

COMMIT;
update cwcalendar
set month=month-1 where day>0 ;
/
drop index "UNIQUE_CODES";

ALTER TABLE CWDBCODETABLES
 MODIFY (
	CTTYPE VARCHAR2(64),
	CODE VARCHAR2(64));

CREATE UNIQUE INDEX "UNIQUE_CODES" ON "CWDBCODETABLES" (CASE  WHEN ("VALID_FROM"<>"VALID_TO" OR "VALID_TO" IS NULL) THEN "CTTYPE" ELSE NULL END , CASE  WHEN ("VALID_FROM"<>"VALID_TO" OR "VALID_TO" IS NULL) THEN "CODE" ELSE NULL END , CASE  WHEN ("VALID_FROM"<>"VALID_TO" OR "VALID_TO" IS NULL) THEN "VALID_FROM" ELSE NULL END );


--alter table "BSSF_PLA_CELL" drop column "CWDOCID";
--alter table "BSSF_PLA_ACTION" drop column "CWDOCID";

-- modified for handling exception (column does not exist)
declare 
	invalid_column exception;
	pragma exception_init(invalid_column, -00904); -- column does not exist (exception)
begin
	execute immediate 'alter table BSSF_PLA_CELL drop column CWDOCID';
	exception when invalid_column then null;
end;
/
declare 
	invalid_column exception;
	pragma exception_init(invalid_column, -00904); -- column does not exist (exception)
begin
	execute immediate 'alter table BSSF_PLA_ACTION drop column CWDOCID';
	exception when invalid_column then null;
end;
/

define DEFAULT_TABLESPACE_TABLE = USERS;
define DEFAULT_TABLESPACE_INDEX = USERS;
-- entity table changes

-- Add new fields
ALTER TABLE CWT_SR_ENTITY
ADD (
VERSION NUMBER(10, 0),
HASCOLLECTION VARCHAR2(1),
HASNAMEVALUEPAIRS VARCHAR2(1),
ISPENDING VARCHAR2(1)
);
/

UPDATE CWT_SR_ENTITY set VERSION=1 WHERE VERSION IS NULL;
/

-- drop current constraint
ALTER TABLE CWT_SR_ENTITY 
DROP CONSTRAINT PK_CWT_SR_ENTITY;
/

drop Index PK_CWT_SR_ENTITY;
/

-- add new index and constraint
ALTER TABLE CWT_SR_ENTITY
ADD CONSTRAINT PK_CWT_SR_ENTITY PRIMARY KEY 
(
  APPLICATIONCONTEXT 
, ENTITYTYPE 
, DN 
, VERSION 
)
USING INDEX 
(
    CREATE UNIQUE INDEX PK_CWT_SR_ENTITY ON CWT_SR_ENTITY (APPLICATIONCONTEXT ASC, ENTITYTYPE ASC, DN ASC, VERSION ASC) 
)
 ENABLE;
/
 
-- entityact table changes

-- add new fields

ALTER TABLE CWT_SR_ENTITYACT 
ADD (
VERSION NUMBER(10, 0),
HASCOLLECTION VARCHAR2(1),
HASNAMEVALUEPAIRS VARCHAR2(1),
ISPENDING VARCHAR2(1)
);
/

UPDATE CWT_SR_ENTITYACT set VERSION=1 WHERE VERSION IS NULL;
-- drop current constraint
/

ALTER TABLE CWT_SR_ENTITYACT 
DROP CONSTRAINT PK_CWT_SR_ENTITYACT;
/

drop index PK_CWT_SR_ENTITYACT;
/

-- add new index and constraint
ALTER TABLE CWT_SR_ENTITYACT
ADD CONSTRAINT PK_CWT_SR_ENTITYACT PRIMARY KEY 
(
  APPLICATIONCONTEXT 
, ENTITYTYPE 
, DN 
, VERSION 
)
USING INDEX 
(
    CREATE UNIQUE INDEX PK_CWT_SR_ENTITYACT ON CWT_SR_ENTITYACT (APPLICATIONCONTEXT ASC, ENTITYTYPE ASC, DN ASC, VERSION ASC) 
)
 ENABLE;
/

-- Association table changes

ALTER TABLE CWT_SR_ASSOCIATION
ADD (
AVERSION NUMBER(10, 0) ,
ZVERSION NUMBER(10, 0) ,
HASCOLLECTION VARCHAR2(1),
HASNAMEVALUEPAIRS VARCHAR2(1),
VERSION NUMBER(10, 0) ,
ISPENDING VARCHAR2(1)
);
/

UPDATE CWT_SR_ASSOCIATION set VERSION=1 WHERE VERSION IS NULL;
/

-- drop current constraint
ALTER TABLE CWT_SR_ASSOCIATION 
DROP CONSTRAINT PK_CWT_SR_ASSOCIATION;
/

drop index PK_CWT_SR_ASSOCIATION;
/

-- create index and constraint
ALTER TABLE CWT_SR_ASSOCIATION
ADD CONSTRAINT PK_CWT_SR_ASSOCIATION PRIMARY KEY 
(
  APPLICATIONCONTEXT 
, ASSOCIATIONTYPE 
, DN 
, VERSION 
)
USING INDEX 
(
    CREATE UNIQUE INDEX PK_CWT_SR_ASSOCIATION ON CWT_SR_ASSOCIATION (APPLICATIONCONTEXT ASC, ASSOCIATIONTYPE ASC, DN ASC, VERSION ASC) 
)
 ENABLE;
/
 
 -- AssociationAct table changes
ALTER TABLE CWT_SR_ASSOCIATIONACT 
ADD (
AVERSION NUMBER(10, 0) ,
ZVERSION NUMBER(10, 0) ,
HASCOLLECTION VARCHAR2(1),
HASNAMEVALUEPAIRS VARCHAR2(1),
VERSION NUMBER(10, 0) ,
ISPENDING VARCHAR2(1)
);
/

UPDATE CWT_SR_ASSOCIATIONACT set VERSION=1 WHERE VERSION IS NULL;
/

-- drop current constraint
ALTER TABLE CWT_SR_ASSOCIATIONACT 
DROP CONSTRAINT PK_CWT_SR_ASSOCIATIONACT;
/

drop index PK_CWT_SR_ASSOCIATIONACT;
/

-- create new index and constraint
ALTER TABLE CWT_SR_ASSOCIATIONACT
ADD CONSTRAINT PK_CWT_SR_ASSOCIATIONACT PRIMARY KEY 
(
  APPLICATIONCONTEXT 
, ASSOCIATIONTYPE 
, DN 
, VERSION 
)
USING INDEX 
(
    CREATE UNIQUE INDEX PK_CWT_SR_ASSOCIATIONACT ON CWT_SR_ASSOCIATIONACT (APPLICATIONCONTEXT ASC, ASSOCIATIONTYPE ASC, DN ASC, VERSION ASC) 
)
 ENABLE;
/


-- CWT_SR_ENTITY_BEFINS
----------------------------------------------------------
create or replace
trigger CWT_SR_ENTITY_BEFINS
before insert on CWT_SR_ENTITY
referencing old as old new as new 
for each row
declare
	today date := trunc(sysdate);

begin
	
	-- update previous version 
	update CWT_SR_ENTITY set VALIDTODATE = :new.VALIDFROMDATE where APPLICATIONCONTEXT = :new.APPLICATIONCONTEXT
																	and ENTITYTYPE = :new.ENTITYTYPE 
																	and DN = :new.DN
																	and (VALIDTODATE is null or VALIDTODATE > :new.VALIDTODATE);
	
	-- insert into active as well
	insert into  CWT_SR_ENTITYACT( APPLICATIONCONTEXT, ENTITYTYPE, DN,
									VALIDFROMDATE, VALIDTODATE,
									CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDDATE,
									STATE, STATEDATE, HIERARCHICALNAMING, AUTONAMED,DATA,SEARCHTEXT,
									CUSTOMERID, ACCOUNTID, LOCATIONID, SITEID, SERVICEDATE, REQUESTDATE,
									FAMILY, CATEGORY, CATALOGCODE, CATALOGTYPE, PARENTENTITYTYPE, PARENTASSOCNAME,
									PARENTDN, ORDERID,VERSION,HASCOLLECTION,HASNAMEVALUEPAIRS,ISPENDING)
							values( :new.APPLICATIONCONTEXT, :new.ENTITYTYPE, :new.DN,
									:new.VALIDFROMDATE, :new.VALIDTODATE,
									:new.CREATEDBY, :new.CREATEDDATE, :new.UPDATEDBY, :new.UPDATEDDATE,
									:new.STATE, :new.STATEDATE, :new.HIERARCHICALNAMING, :new.AUTONAMED, :new.DATA, :new.SEARCHTEXT,
									:new.CUSTOMERID, :new.ACCOUNTID, :new.LOCATIONID, :new.SITEID, :new.SERVICEDATE, :new.REQUESTDATE,
									:new.FAMILY, :new.CATEGORY, :new.CATALOGCODE, :new.CATALOGTYPE, :new.PARENTENTITYTYPE, :new.PARENTASSOCNAME,
									:new.PARENTDN, :new.ORDERID, :new.VERSION,:new.HASCOLLECTION,:new.HASNAMEVALUEPAIRS,:new.ISPENDING);
	
									
end;
/

----------------------------------------------------------
-- CWT_SR_ASSOCIATION_BEFINS
----------------------------------------------------------
create or replace
trigger CWT_SR_ASSOCIATION_BEFINS
before insert on CWT_SR_ASSOCIATION
referencing old as old new as new 
for each row
declare
	today date := trunc(sysdate);

begin
	
	-- update previous version 
	update CWT_SR_ASSOCIATION set VALIDTODATE = :new.VALIDFROMDATE where APPLICATIONCONTEXT = :new.APPLICATIONCONTEXT
																	and ASSOCIATIONTYPE = :new.ASSOCIATIONTYPE 
																	and DN = :new.DN
																	and (VALIDTODATE is null or VALIDTODATE > :new.VALIDTODATE) ;
	
	-- insert into active as well
	insert into  CWT_SR_ASSOCIATIONACT( APPLICATIONCONTEXT, ASSOCIATIONTYPE, DN,
									VALIDFROMDATE, VALIDTODATE,
									CREATEDBY, CREATEDDATE, UPDATEDBY, UPDATEDDATE,
									STATE, STATEDATE, SELF, 
									ENTITYAPPLICATIONCONTEXT, ENTITYTYPE, ENTITYDN, ISEXTERNALENTITY,
									ASSOCENTITYAPPLICATIONCONTEXT, ASSOCENTITYTYPE, ASSOCENTITYDN, ISEXTERNALASSOCENTITY, DATA, SEARCHTEXT,VERSION,
									AVERSION,ZVERSION,HASCOLLECTION,HASNAMEVALUEPAIRS,ISPENDING)
							values( :new.APPLICATIONCONTEXT, :new.ASSOCIATIONTYPE, :new.DN,
									:new.VALIDFROMDATE, :new.VALIDTODATE,
									:new.CREATEDBY, :new.CREATEDDATE, :new.UPDATEDBY, :new.UPDATEDDATE,
									:new.STATE, :new.STATEDATE, :new.SELF, 
									:new.ENTITYAPPLICATIONCONTEXT, :new.ENTITYTYPE, :new.ENTITYDN, :new.ISEXTERNALENTITY,
									:new.ASSOCENTITYAPPLICATIONCONTEXT, :new.ASSOCENTITYTYPE, :new.ASSOCENTITYDN, :new.ISEXTERNALASSOCENTITY,
									:new.DATA, :new.SEARCHTEXT, :new.VERSION,
									:new.AVERSION,:new.ZVERSION,:new.HASCOLLECTION,:new.HASNAMEVALUEPAIRS,:new.ISPENDING);
	
									
end;
/


CREATE TABLE "CWT_SR_CONTEXTDATA" (	
   "SEARCHTEXT" VARCHAR2(4000 BYTE), 
	"DATA" NCLOB, 
	"NAME" VARCHAR2(32 BYTE), 
	"PARENTVERSION" NUMBER(10,0), 
	"PARENTDN" VARCHAR2(128 BYTE), 
	"PARENTTYPE" VARCHAR2(32 BYTE), 
	"PARENTAPPLICATIONCONTEXT" VARCHAR2(32 BYTE), 
	"ID" VARCHAR2(16 BYTE) NOT NULL ENABLE,
	CONSTRAINT PK_CWT_SR_CONTEXTDATA PRIMARY KEY(ID) USING INDEX
	(CREATE UNIQUE INDEX PK_CWT_SR_CONTEXTDATA ON CWT_SR_CONTEXTDATA(ID) TABLESPACE &DEFAULT_TABLESPACE_INDEX)
)
TABLESPACE &DEFAULT_TABLESPACE_TABLE;
/

CREATE TABLE "CWT_SR_CUR_VERSION" (	
    "ISARCHIVED" VARCHAR2(1 BYTE), 
	"VERSION" NUMBER(10,0), 
	"COUNTER" NUMBER(10,0), 
	"DN" VARCHAR2(128 BYTE) NOT NULL ENABLE, 
	"TYPE" VARCHAR2(32 BYTE) NOT NULL ENABLE, 
	"CONTEXT" VARCHAR2(32 BYTE) NOT NULL ENABLE,
	CONSTRAINT PK_CWT_SR_CUR_VERSION PRIMARY KEY("DN", "CONTEXT", "TYPE") USING INDEX
	(CREATE UNIQUE INDEX PK_CWT_SR_CUR_VERSION ON CWT_SR_CUR_VERSION("DN", "CONTEXT", "TYPE") TABLESPACE &DEFAULT_TABLESPACE_INDEX)
)
TABLESPACE &DEFAULT_TABLESPACE_TABLE;
/

CREATE TABLE "CWT_SR_NV_PAIR" (	
    "VALUE" VARCHAR2(256 BYTE), 
	"NAME" VARCHAR2(128 BYTE), 
	"ISDATE" NUMBER(1,0), 
	"ISNUMBER" NUMBER(1,0), 
	"ISHIERARCHICALNAMING" NUMBER(1,0), 
	"PARENTVERSION" NUMBER(10,0), 
	"PARENTDN" VARCHAR2(128 BYTE), 
	"PARENTTYPE" VARCHAR2(32 BYTE), 
	"PARENTAPPLICATIONCONTEXT" VARCHAR2(32 BYTE), 
	"ID" VARCHAR2(16 BYTE) NOT NULL ENABLE,
	CONSTRAINT PK_CWT_SR_NV_PAIR PRIMARY KEY("ID") USING INDEX
	(CREATE UNIQUE INDEX PK_CWT_SR_NV_PAIR ON CWT_SR_NV_PAIR("ID") TABLESPACE &DEFAULT_TABLESPACE_INDEX)
)
TABLESPACE &DEFAULT_TABLESPACE_TABLE;
/

CREATE TABLE "CWT_SR_PRODPRICE" (	
    "CURRENCY" VARCHAR2(32 BYTE), 
	"FREQUENCY" VARCHAR2(32 BYTE), 
	"CHARGETYPECODE" VARCHAR2(32 BYTE), 
	"TAXCODE" VARCHAR2(32 BYTE), 
	"AMOUNT" NUMBER(12,4), 
	"DESCRIPTION" VARCHAR2(64 BYTE), 
	"NAME" VARCHAR2(32 BYTE), 
	"VERSION" NUMBER(10,0) NOT NULL ENABLE, 
	"ID" VARCHAR2(256 BYTE) NOT NULL ENABLE, 
	CONSTRAINT PK_CWT_SR_PRODPRICE PRIMARY KEY("ID", "VERSION") USING INDEX
	(CREATE UNIQUE INDEX PK_CWT_SR_PRODPRICE ON CWT_SR_PRODPRICE("ID", "VERSION") TABLESPACE &DEFAULT_TABLESPACE_INDEX)
)
TABLESPACE &DEFAULT_TABLESPACE_TABLE;
/

CREATE TABLE "CWT_SR_PRODUCT"(	
	"DESCRIPTION" VARCHAR2(128 BYTE), 
	"QUANTITYUNIT" VARCHAR2(32 BYTE), 
	"QUANTITYAMOUNT" NUMBER(12,4), 
	"PRODUCTOFFERING" VARCHAR2(32 BYTE), 
	"PRODUCTSPECIFICATION" VARCHAR2(32 BYTE), 
	"ISCUSTOMERVISIBLE" NUMBER(1,0), 
	"ISBUNDLE" NUMBER(1,0), 
	"PRODUCTSERIALNUMBER" VARCHAR2(64 BYTE), 
	"NAME" VARCHAR2(32 BYTE), 
	"VERSION" NUMBER(10,0) NOT NULL ENABLE, 
	"ID" VARCHAR2(256 BYTE) NOT NULL ENABLE,
	CONSTRAINT PK_CWT_SR_PRODUCT PRIMARY KEY("ID", "VERSION") USING INDEX
	(CREATE UNIQUE INDEX PK_CWT_SR_PRODUCT ON CWT_SR_PRODUCT("ID", "VERSION") TABLESPACE &DEFAULT_TABLESPACE_INDEX)
)
TABLESPACE &DEFAULT_TABLESPACE_TABLE;
/

CREATE TABLE "CWT_SR_RESOURCE" (	
	"SERIALNUMBER" VARCHAR2(64 BYTE), 
	"RESOURCENUMBER" VARCHAR2(64 BYTE), 
	"TYPE" VARCHAR2(16 BYTE), 
	"ISLOGICAL" NUMBER(1,0), 
	"ISCOMPOUND" NUMBER(1,0), 
	"EXTERNALID" VARCHAR2(64 BYTE), 
	"NAME" VARCHAR2(32 BYTE), 
	"VERSION" NUMBER(10,0) NOT NULL ENABLE, 
	"ID" VARCHAR2(256 BYTE) NOT NULL ENABLE, 
	CONSTRAINT PK_CWT_SR_RESOURCE PRIMARY KEY("ID", "VERSION") USING INDEX
	(CREATE UNIQUE INDEX PK_CWT_SR_RESOURCE ON CWT_SR_RESOURCE("ID", "VERSION") TABLESPACE &DEFAULT_TABLESPACE_INDEX)
)
TABLESPACE &DEFAULT_TABLESPACE_TABLE;
/

CREATE TABLE "CWT_SR_SERVICE" (	
    "STATUSREASON" VARCHAR2(32 BYTE), 
	"ISSTATEFUL" NUMBER(1,0), 
	"STARTMODE" NUMBER(10,0), 
	"ISMANDATORY" NUMBER(1,0), 
	"HASSTARTED" NUMBER(1,0), 
	"ISSERVICEENABLED" NUMBER(1,0), 
	"NAME" VARCHAR2(32 BYTE), 
	"SERVICESPECIFICATION" VARCHAR2(128 BYTE), 
	"SERVICECANDIDATE" VARCHAR2(128 BYTE), 
	"TYPE" VARCHAR2(64 BYTE), 
	"VERSION" NUMBER(10,0) NOT NULL ENABLE, 
	"ID" VARCHAR2(128 BYTE) NOT NULL ENABLE, 
	CONSTRAINT PK_CWT_SR_SERVICE PRIMARY KEY("ID", "VERSION") USING INDEX
	(CREATE UNIQUE INDEX PK_CWT_SR_SERVICE ON CWT_SR_SERVICE("ID", "VERSION") TABLESPACE &DEFAULT_TABLESPACE_INDEX)
)
TABLESPACE &DEFAULT_TABLESPACE_TABLE;
/

ALTER TABLE CWT_SR_ENTITY  
MODIFY (VERSION NOT NULL);
/

ALTER TABLE CWT_SR_ENTITYACT  
MODIFY (VERSION NOT NULL);
/

ALTER TABLE CWT_SR_ASSOCIATION
MODIFY (VERSION NOT NULL);
/

ALTER TABLE CWT_SR_ASSOCIATIONACT
MODIFY (VERSION NOT NULL);
/


CREATE UNIQUE INDEX IX_SR_CONTEXTDATA on
CWT_SR_CONTEXTDATA (PARENTAPPLICATIONCONTEXT, PARENTTYPE, PARENTDN, PARENTVERSION);
/

COMMIT;
/ALTER TABLE CWPC_BASKETITEM ADD relations VARCHAR2(4000);

ALTER TABLE CWPC_BASKETITEMCHARGE MODIFY (CURRENCY NULL);
COMMIT;



INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('data_order',00016000);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('wizard',00005000);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('ecmDTLib',20140328);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('customer_information_management',00005000);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('ecmBillingAdapterValidation',1);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('cwInitialization',00005000);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('ecm',20140910);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('order_negotiations',00005000);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('order_negotiations_lib',00005000);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('service_registry',00006000);
UPDATE CWPRODUCTPROPERTIES SET NVALUE=20120817 WHERE ID='cwl_security';
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('cwl_service_registry',00006003);
INSERT INTO CWPRODUCTPROPERTIES (ID,NVALUE) VALUES('plugin_on_cim',00005000);
UPDATE CWPRODUCTPROPERTIES SET NVALUE=00006003 WHERE ID='catalogClient';

COMMIT;


-- Generated by Ericsson Service Designer on Tue Feb 28 17:59:46 CLT 2017

